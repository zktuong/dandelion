name: tests

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "master"

env:
  cache-version: "cache-v2"

jobs:
  changes:
    name: Checking changed files
    runs-on: ubuntu-latest
    outputs:
      keepgoing: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            *.{yml,yaml,py,toml}
            **/*.{yml,yaml,py,toml}
            container/database
            container/tests
            container/scripts/*.py
            tests
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
          echo ${{ steps.changed-files.outputs.any_changed }}
  tests:
    needs:
      - changes
    if: needs.changes.outputs.keepgoing == 'true'
    timeout-minutes: 720
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      max-parallel: 10
      matrix:
        config:
          - { python-version: "3.10", os: ubuntu-latest }
          - { python-version: "3.11", os: ubuntu-latest }
          - { python-version: "3.12", os: ubuntu-latest }
          # - { python-version: "3.13", os: ubuntu-latest }
          - { python-version: "3.10", os: macos-13 }
          - { python-version: "3.11", os: macos-13 }
          - { python-version: "3.12", os: macos-13 }
          # - { python-version: "3.13", os: macos-13 }
          # disabled until it's fixed.
    runs-on: ${{ matrix.config.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      NOT_CRAN: true
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4

      - name: Install macOS system dependencies
        if: matrix.config.os == 'macos-13'
        run: |
          brew install cairo pkg-config autoconf automake libtool

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: dandelion
          environment-file: environment.yml
          cache-environment: true
          cache-downloads: true
          cache-environment-key: environment-${{ env.cache-version }}-${{ matrix.config.os }}
          cache-downloads-key: downloads-${{ env.cache-version }}-${{ matrix.config.os }}
          post-cleanup: "all"
          create-args: >-
            python=${{ matrix.config.python-version }}
            igblast>=1.17.0
            blast
            rpy2
            r-optparse
            r-shazam
            r-alakazam
            r-tigger
            r-scoper
            bioconductor-edger

      - name: Display Python version
        run: |
          python --version
          which python

      - name: Test if blast works
        run: |
          blastn -h

      - name: Test if igblast works
        run: |
          igblastn -h

      - name: Install Dandelion
        run: |
          pip install -e ".[scirpy]"
          pip install palantir
          pip install pertpy

      - name: Test if R dependencies are installed properly
        run: |
          Rscript tests/r_dependencies.R
        shell: bash -l {0}

      - name: Test with pytest
        run: |
          pytest

      - name: Show coverage
        run: |
          coverage report

      - name: Upload coverage to Codecov
        if: matrix.config.os == 'ubuntu-latest' && matrix.config.python-version == '3.10' &&  github.actor == 'zktuong' && github.repository == 'zktuong/dandelion'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          directory: ./coverage/reports/
          env_vars: ${{ format('OS={0},PYTHON={1}', matrix.config.os, matrix.config.python-version) }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
